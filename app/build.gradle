plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'de.mannodermaus.android-junit5'
    id "io.gitlab.arturbosch.detekt"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.kotlin.andi.cinema"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "API_KEY", "\"2c3d5d2d06555a01ea86522c230fc19a\""
        buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/\""
        buildConfigField "String", "BASE_IMG_URL", "\"https://image.tmdb.org/t/p/w500/\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    //spek 2
    // Add Kotlin source directory to all source sets
    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }

    testOptions {
        unitTests.returnDefaultValues = true

        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
            jacocoOptions {
                // here goes all jacoco config, for example
                html.enabled = true
                xml.enabled = false
                csv.enabled = false
            }
        }
        unitTests.all {
            testLogging.events = ["passed", "skipped", "failed"]
        }
    }
}

detekt {
    failFast = true // fail build on any finding
    input = files("$projectDir")
    buildUponDefaultConfig = true // preconfigure defaults
    config = files("$projectDir/detekt/detekt.yml")
    // point to your custom config defining rules to run, overwriting default behavior
    baseline = file("$projectDir/detekt/baseline.xml")
    // a way of suppressing issues before introducing detekt

    reports {
        html {
            enabled = true // observe findings in your browser with structure and code snippets
            destination = file("$projectDir/detekt/report.html")
        }
        xml {
            enabled = true
            destination = file("$projectDir/detekt/report.xml")
        } // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = true
        // similar to the console output, contains issue signature to manually edit baseline files
    }
}

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // ui
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation 'com.romandanylyk:pageindicatorview:1.0.3'
    implementation "com.xwray:groupie:2.8.1"

    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // lottie
    implementation "com.airbnb.android:lottie:$lottieVersion"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$couroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$couroutineVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    // Okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhtppVersion"

    // Koin for Kotlin
    implementation "org.koin:koin-core:$koinVersion"

    // architecture component
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"

    // detekt
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
    detekt "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
    detekt "io.gitlab.arturbosch.detekt:detekt-cli:$detektVersion"

    // testing
    // jUnit 4
    testImplementation "junit:junit:$junit4Version"
    androidTestImplementation "junit:junit:$junit4Version"
    // espresso
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$extJunitKTXTest"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    //idling Resource
    implementation "com.android.support.test.espresso:espresso-idling-resource:$idlingResource"
    //mockito
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
}
